servers:
  dev:
    url: tcp://localhost:9092
    protocol: kafka
  production:
    url: tcp://velomobile-01.srvs.cloudkafka.com:9094
    protocol: kafka

operations:
  rideRequested:
    operationId: rideRequested
    summary: Ride requested
    description: The user requested a ride.
    message:
      $ref: '#/messages/rideRequested'
  rideAccepted:
    operationId: rideAccepted
    summary: Ride accepted
    message:
      $ref: '#/messages/rideAccepted'
  rideAssigned:
    operationId: rideAssigned
    summary: Ride assigned
    message:
      $ref: '#/messages/rideAssigned'

messages:
  rideRequested:
    payload:
      type: object
      properties:
        user:
          $ref: '#/schemas/user'
        ride:
          $ref: '#/schemas/ride'
        sentAt:
          $ref: '#/schemas/sentAt'
  rideAccepted:
    payload:
      type: object
      properties:
        rideId:
          $ref: '#/schemas/rideId'
        driverId:
          $ref: '#/schemas/driverId'
  rideAssigned:
    payload:
      type: object
      properties:
        user:
          $ref: '#/schemas/user'
        driver:
          $ref: '#/schemas/driver'
        ride:
          $ref: '#/schemas/ride'
        sentAt:
          $ref: '#/schemas/sentAt'
  rideStatus:
    payload:
      type: object
      properties:
        user:
          $ref: '#/schemas/user'
        driver:
          $ref: '#/schemas/driver'
        ride:
          $ref: '#/schemas/rideWithStatus'
        sentAt:
          $ref: '#/schemas/sentAt'
schemas:
  sentAt:
    type: string
    format: date-time
    description: Date and time when the message was sent.
  userId:
    type: string
    description: Id of the user.
  driverId:
    type: string
    description: Id of the driver.
  rideId:
    type: integer
    description: Id of the ride.
  user:
    type: object
    properties:
      id:
        $ref: '#/schemas/userId'
      fullName:
        type: string
  driver:
    type: object
    properties:
      id:
        $ref: '#/schemas/driverId'
      fullName:
        type: string
  ride:
    type: object
    properties:
      id:
        $ref: '#/schemas/userId'
      from:
        $ref: '#/schemas/rideLocation'
        description: Position where the ride starts from.
      to:
        $ref: '#/schemas/rideLocation'
        description: Position where the ride finishes.
      price:
        type: number
        minimum: 0
        description: Price of the ride in Euros.
  rideWithStatus:
    allOf:
      - $ref: '#/schemas/ride'
      - type: object
        properties:
          status:
            type: string
            description: Status of the ride.
            enum:
              - picked-up
              - started
              - finished
              - paid
  rideLocation:
    type: object
    properties:
      latitude:
        type: number
        minimum: -90
        maximum: 90
        description: Latitude of the starting point.
      longitude:
        type: number
        minimum: -180
        maximum: 180
        description: Longitude of the starting point.
      friendlyName:
        type: string
        description: Human-friendly name of the location.
